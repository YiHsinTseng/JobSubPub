name: Deploy to EC2

on:
  push:
    branches:
      - release/*

jobs:
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    steps:
      - name: Connect to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }} 
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }} 
          script: |
            if ! command -v git &> /dev/null; then
              echo "Git not found. Installing Git..."
              if command -v apt-get &> /dev/null; then
                sudo apt-get update && sudo apt-get install git -y
              elif command -v yum &> /dev/null; then
                sudo yum install git -y
              fi
            else
              echo "Git is already installed."
            fi

            if [ ! -d "JobSubPub" ]; then 
              git clone -b master https://github.com/YiHsinTseng/JobSubPub.git
            fi

            cd JobSubPub || exit
            git fetch origin
            git reset --hard origin/master

            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing Docker..."
              sudo yum update -y
              sudo yum -y install docker
              sudo service docker start
              sudo systemctl enable docker
            else
              echo "Docker is already installed."
            fi

            DOCKER_COMPOSE_PATH="/usr/local/bin/docker-compose"

            if [ ! -f "$DOCKER_COMPOSE_PATH" ]; then
              echo "Docker Compose not found. Downloading..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o "$DOCKER_COMPOSE_PATH"
              sudo chmod +x "$DOCKER_COMPOSE_PATH"
            else
              echo "Docker Compose is already installed."
            fi

            cd Docker || exit

            rm -f .env
            touch .env
            echo "Creating .env file..."
            {
              echo "JOBS_PORT=${{ vars.JOBS_PORT }}"
              echo "PUB_PORT=${{ vars.PUB_PORT }}"
              echo "PUBLISH_CRON_TIME=${{ vars.PUBLISH_CRON_TIME }}"
              echo "WHITE_LIST=${{ secrets.WHITE_LIST }}"
              echo "DB_PORT=${{ vars.DB_PORT }}"
              echo "DB_HOST=${{ vars.DB_HOST }}"
              echo "DB_NAME=${{ vars.DB_NAME }}"
              echo "DB_USER=${{ secrets.DB_USER }}"
              echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
              echo "MQTT_BROKER_URL=${{ vars.MQTT_BROKER_URL }}"
              echo "MQTT_TOPIC=${{ vars.MQTT_TOPIC }}"
              echo "MQTT_JOB=${{ vars.MQTT_JOB }}"
              echo "MQTT_COMPANY=${{ vars.MQTT_COMPANY }}"
              echo "QOS_LEVEL=${{ vars.QOS_LEVEL }}"
              echo "PASSPORT_SECRET=${{ secrets.PASSPORT_SECRET }}"
              echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}"
              echo "REDIS_URL=${{ vars.REDIS_URL }}"
              echo "LOG_FILE=${{ vars.LOG_FILE }}"
            } >> .env
            sudo chmod 600 .env

            sudo docker system prune -f --volumes
            sudo docker-compose down
            sudo docker-compose up --build -d
