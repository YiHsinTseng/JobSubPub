version: '3.8'

services:
  mosquitto:
    build:
      context: .
      dockerfile: Dockerfile.mq
    container_name: mosquitto
    #沒有創建mosquitto.db就無法離線
    volumes:
      - ./mosquitto/data:/mosquitto/data
    #1883在容器內已被佔用(可能是socket)
    ports:
      - "1884:1884"
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 1884 || exit 1" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: jobs
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test -d jobs" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  python:
    build:
      context: ../
      dockerfile: Docker/Dockerfile.python
    ##取代資料夾內的.env
    env_file:
      - ./.env
    ##保存container中的紀錄
    volumes:
      - ./scraper_service/data:/app/data
    container_name: scraper_service
    depends_on:
      postgres:
        condition: service_healthy
      node:
        condition: service_started

  node:
    build:
      context: ../
      dockerfile: Docker/Dockerfile.node
    env_file:
      - ./.env
    working_dir: /app
    ports:
      - "4000:4000"
    container_name: publish_service
    depends_on:
      postgres:
        condition: service_healthy
      mosquitto:
        condition: service_started

# volumes:
#   postgres_data:
